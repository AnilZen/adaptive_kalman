<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Adaptive Regression</title><link>https://anilzen.github.io/adaptive_regression/</link><description>Recent content on Adaptive Regression</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 22 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://anilzen.github.io/adaptive_regression/index.xml" rel="self" type="application/rss+xml"/><item><title>Lorenz-96 Model</title><link>https://anilzen.github.io/adaptive_regression/code/lorenz-96/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/code/lorenz-96/</guid><description>The Lorenz-96 model is a chaotic, continuous-in-time, discrete-in-space, dynamical system that was proposed by Lorenz in 1996 as a toy model for weather dynamics1.
$$ \frac{dx_j}{dt} = ( x_{j+1} - x_{j-2} ) x_{j-1} - x_j + F(t). $$ Even though the equations have been used and studied for a long time, their chaotic behavior has been mathematically proven only recently2.
The system is implemented in helpers.py in class Lorenz.
Parameters N: Number of grid points, defaults to 40.</description></item><item><title>Biased Forecast</title><link>https://anilzen.github.io/adaptive_regression/code/forecast/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/code/forecast/</guid><description>Forecasts are made using the Forecast class, which inherits from Lorenz. The time step and the number of grid points in the related Lorenz system are hard-coded to 40 and 0.05 respectively.
Parameters Forecasts are made from initial data provided by Nature at certain stations for a certain number of forecast days using a biased model. Therefore, the parameters are
Nature: Nature reference array (Lorenz.sol). Forecast quality is compared to Nature.</description></item><item><title>Adaptive Regression</title><link>https://anilzen.github.io/adaptive_regression/code/adaptive-regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/code/adaptive-regression/</guid><description>The adaptive regression (AR) method uses Kalman Filters.</description></item><item><title>Forecasting</title><link>https://anilzen.github.io/adaptive_regression/experiment/forecasting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/experiment/forecasting/</guid><description>Nature</description></item><item><title>NOAA Request</title><link>https://anilzen.github.io/adaptive_regression/blog/noaa-request/</link><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/blog/noaa-request/</guid><description>We asked for data to test the method, but our request was declined.</description></item><item><title>Starting Point</title><link>https://anilzen.github.io/adaptive_regression/blog/starting-point/</link><pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/blog/starting-point/</guid><description>I took a class by Eugenia on data assimilation, and this topic was discussed.</description></item><item><title>MOS Forecast</title><link>https://anilzen.github.io/adaptive_regression/code/mos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://anilzen.github.io/adaptive_regression/code/mos/</guid><description>A MOS forecast starts with the computation of the regression parameters using the method regression_pars, which performs a linear, two-parameter regression. The predictor is the station forecast and the predictand is the Nature solution evaluated at these stations. The comparison between the Nature solution and the forecast provides the regression parameters.
Writing $x$ as the biased forecasts for each forecast hour (one predictor), $\hat{y}$ as the corrected forecast (predictand), and $y$ as the Nature solution, we have $$ \hat{y} = \sum_k b_k x_k, \qquad y = \hat{y} + \epsilon, $$</description></item></channel></rss>